FORMAT: 1A
HOST: http://54.84.8.232:25890
//HOST: http://10.10.1.239:8889

# CWEBSAPI

# Group Admin

## Version [/cwebs/version/]

### Get CWEBS VERSION [GET]

+ Response 200 (application/json)

    + Body
    
            + status (string)
            + result
                + version (string)
            
# Group Account

# Read accounts [/account/corporate/5000/0/]

## Read customer account [GET]

+ Response 200  (application/json)  


## Get  Read All accounts [/account/corporate/all/]
### Read all accounts [GET]
+ Response 200 (application/json)

    + Body
    
            + status (string)
            + accounts (array[AccountPrompt])
            + result
                + message (string)
                + number_of_accounts (number)
                
# Group messages
## Send Driver Message [/message/send_driver_msg/]
### Send Message [POST]
+ Request (application/json)
    + Attributes
    
        - driver_id (number)        *M*
        - operator_id (number)     *M*
        - mesg (array[string])      *M*
        - company_id (number)       *M* *NEW*
        - farenumber (number)       *O*
        - driver_name (string)      *O*
        - operator_name (string)    *O*
        - zone (number)             *O*

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }

## Send Vehicle Message [/message/send_vehicle_msg/]
### Send Message [POST]
+ Request (application/json)
    + Attributes
    
        - taxi (number)        *M*
        - operator_id (number)     *M*
        - mesg (array[string])      *M*
        - company_id (number)       *M* *NEW*
        - farenumber (number)       *O*
        - driver_name (string)      *O*
        - operator_name (string)    *O*
        - zone (number)             *O*

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }


## Send Fleet Message [/message/send_fleet_msg/]
### Send Fleet Message [POST]
+ Request (application/json)
    + Attributes
    
        - fleet (number)        *M*
        - operator_id (number)     *M*
        - mesg (array[string])      *M*
        - company_id (number)       *M* *NEW*
        - operator_name (string)    *O*
        - zone (number)             *O*

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }
            
## Send device/sendmsg [/device/sendmsg/]
### Send device sendmsg  [POST]
+ Request (application/json)
    + Attributes
    
        - vehicle_id (number)       *M*
        - msgtext (string)          *M*
        - company_id (number)       *M* *NEW*
 

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }

## clear_emergency [/device/clear_emergency/]
### clear_emergency  [POST]
+ Request (application/json)
    + Attributes
    
        - taxi (number)         *M*
        - operator_id (number)  *M*
        - fleet (number)        *M* *NEW*
 

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }

#Group Fares 

## Read Book Order [/fares/read_book_order/]

### Read fare details [POST]
+ Request (application/json)
    + Attributes
        - fare_number (string, required)
        - fare_type (enum[string], optional)
            - immediate
            - future
        - via_requested (boolean, optional)
    
    + Body 
    
            {
                "fare_number" : "9241",
                "fare_type" : "immediate"
            }
    
            
+ Response 200 (application/json)
    + Attributes
        - status (string, required)
        - result  ReadFareResult (object)

            
## Search Fare Payment [/fares/search_payment/]

### Search Fare Payment [POST]
+ Request (application/json)
    + Attributes
        - start_date (string, required)
        - end_date (string, required)
        - search_type (enum[string], optional)
            - vehicle
            - driver
        - One Of 
            - driver_id (number)
            - vehicle_id (number)
        - num_records (number, optional)
      
    + Body 
    
            {
                "vehicle_id" : 9008,
                "start_date" : "2017-1-01",
                "end_date" : "2017-1-19",
                "num_records" : 20    
            }
    
            
+ Response 200 (application/json)
    + Attributes
        - status (string, required)
        - result  
            - message (string)
            - vehicle_id (number)
            - driver_id (number)
            - num_entries (number)
            - entries ( array[FarePaymentEntry])


## Search Fare Source [/fares/search_source/]

### Search Fare Source [POST]
+ Request (application/json)
    + Attributes
        - start_date (string, required)
        - end_date (string, required)
        - One Of         
            - vehicle_id (number)
            - driver_id (number)
        - num_records (number, optional)
      
    + Body 
    
            {
                "start_date" : "2017-01-19",
                "end_date" : "2017-01-23",
                "driver_id" : 9008
            }
    
            
+ Response 200 (application/json)
    + Attributes
        - status (string, required)
        - result  
            - message (string)
            - vehicle_id (number)
            - driver_id (number)
            - num_entries (number)
            - entries ( array[FareSourceEntry])

            
                    
# Group Suspension

## Vehicle Suspend List [/vehicle/suspend_list/]

### List All Suspended Vehicles [GET]

+ Response 200 (application/json)

    + Attributes
        - status (string, required)
        - result 
            - message (string, required)
            - vehicles (array[SuspensionData])
            - number_of_vehicles (number, required)

## Vehicle suspend [/vehicle/action/]
### Vehicle suspend [POST]

+ Request 1 (application/json)
    + Attributes
       
        - action (string, required) 
        - vehicle_id (string, required)
        - authority_id (number, required)
        - msg_for_dispatch (string)
        - msg_for_driver (string)
        
    + Body
    
            {
            
                "action" : "suspend",
                "vehicle_id" : 8080,
                "authority_id" : 999,
                "msg_for_dispatch" :  "test dispatch",
                "msg_for_driver" :   "test"
            }
        
+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }
        
+ Request 2 (application/json)
    + Body
    
            {
                "action" : "reinstate",
                "vehicle_id" : 8080,
                "authority_id" : 999,
                "msg_for_dispatch" :  "test dispatch",
                "msg_for_driver" :   "test",
                "company_id" : 1,
            }
        


+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
        
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }

+ Request 3 (application/json)
    + Body
    
            {
                "action" : "suspend",
                "vehicle_id" : 8080,
                "authority_id" : 999,
                "company_id" : 1,
            }
        

+ Response 500 (application/json)
    
    + Attributes
        ResultNoData500
        
    + Body 

            { 
            
                "status" : "500 Internal Server Error",
                "result" : {
                    "message": "failure: message for dispatch is not present"
                }
            }
    
    

## Driver suspend list [/driver/suspend_list/]
### Driver Suspend List [GET]

Request (application/json)

+ Response 200 (application/json)

    + Attributes
        + status (string)
        + result
            - message (string)
            - number_of_drivers (number)
            - drivers (array[SuspensionDriverData])
            
                
## Driver Suspend [/supervisor/action/]
### Driver Suspend [POST]
+ Request (application/json)

   + Attributes
        - action (string, required) 
        - driver_id (string, required)
        - fleet (number)
        - msg_id (number)
        - authority_id (number, required)
        - msg_for_dispatch (string)
        - msg_for_driver (string)
        - company_id (number, required)
        - suspend_datetime_start (string)
        - suspend_datetime_end (string)
        - duration
            - days (number)
            - hours (number)
        
    + Body
    
            {
            "action" : "suspend",
            "driver_id" :  1234,
            "fleet" : 2,
            "authority_id" : "667",
            "msg_id" : 1,
            "company_id" : 1,
            "db_action_id" : 3572,
            "msg_for_dispatch" : "test message for dispatch test message for dispatch",
            "msg_for_driver" : "test message for driver test message for driver",
            "suspend_datetime_start": "2017-02-09 14:00",
            "suspend_datetime_end": "2017-02-09 17:00",
            "duration" : 
                    {   
                        "days" : 0, 
                        "hours": 5 
                    },
            }
    
+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body 
    
            {
                "status": "200 OK",
                "result": {
                "message": "OK"
                }     
            }

 
# Group Update-Cancel-No Show

## Cancel Request [/dispatcher/cancel_book_order/]

### Cancel Request [POST]

+ Request (application/json)
    + Attributes (CancelFareRequest)

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 
        
    + Body
    
            {
                "status": "200 OK",
                "result": {
                "message": "success"
                }
            }
        
## Update Fare [/dispatcher/update_fare/]

### Update Fare [POST]

+ Request (application/json)
    + Attributes (UpdateFareRequest)
       
     
        

+ Response 200 (application/json)

    + Attributes
        ResultNoDataOK 


# Group Street Manager

## Street Ranges [/address/read_street_ranges/]

### Retrieve Street List [POST]

+ Request (application/json)
    + Attributes
        + One Of
            + street_id (number)
            + street_name (string)
        + city (string)
        + postal_code (string)

        
    + Body
    
            {
                "street_id" : 25007 
            }
       
+ Response 200 (application/json)
    + Attributes
        - status
        - result
            - message (string)
            - count (number)
            - ranges  (array[StreetRangeEntry])
        

## Street Ranges [/address/update_street_ranges/]

### Store Street List [POST]

+ Request (application/json)
    + Attributes
        + One Of
            + street_name (string)
            + street_id (number)
        + postal_code (string)
        + city (string)
        + num_entries (number)
        + ranges (array[StreetRangeEntry])
        
    + Body
    
            {
                "street_id" : 25007,
                "count" : 1,
                "ranges" : 
                [
                    {
                    "low" : 56,
                    "lat" : 45.0,
                    "lon" : 73.1,
                    "locator" : '',  
                    "number_type" : 120,                                
                    "postal_code" : "K1V 98C",
                    "bid" :  0,
                    "local_call" : 0,
                    "no_service" : 0,
                    "priority" : 0,
                    "restricted" : 0,                
                    "fleet_number": 0,
                    "dispatch_zones" : [ -1,-1,-1,-1 ]
                ]
                }
            }
       
+ Response 200 (application/json)
    + Attributes
        StreetRangeResponse
        

           
            
# Data Structures

## AccountPrompt (object)
    + prompts (array[string])
    + account_number (number)
    + customer_number (number)
    
## AddressInfo (object)
    + city (string)
    + country_code (string)
    + street_number (string)
    + country (string)
    + street_name (string)
    + building_type (string)
    + building_number (string)
    + apartment_code (string)
    + state (string)
    + zone (number)
    + apartment_number (number)
    + address (string)
    + lat (float)
    + lng (float)
    + zip_code (string)
    + building_name (string)
## CallerInfo (object)
    + phone_account (string)
    + mobile (string)
    + disable_call_out (number)
    + booker (string)
    + enable_sms (boolean)
    + passenger_name (string)
    + email (string)
## ReadFareResult (object)
    + message (string)
    + fare_number (number)
    + dispatch_datetime (string)
    + drop_off_datetime (string)
    + fleet_number (number)
    + driver_id (number)
    + vehicle_number (number)
    + orig_rate (number) 
    + cancel_reason (string)
    + pick_up_datetime (string)
    + payment_method (string)
    + pick_up_address (AddressInfo)
    + dispatch_time (string)
    + passenger_number (string)
    + remarks (array(string))
    + is_flat_rate (boolean)
    + customer_number (number)
    + drop_off_address (AddressInfo)
    + vip_number (number)
    + is_future (boolean)
    + driver_types (array(number))
    + caller_info (CallerInfo)
    + trip_id (string)
    + notes (array(string))
    + trip_amount (number)
    + fare_amount (number)
    + account_name (string) 
    + priority (number)
    + driver_name (string)
    + booker (string)
    + account_number (string)
    + quick_return (boolean)
    + fare_number (string)
    + trip_status (string)
    + permanent_remark (string)
    + vehicle_types (array(number))
    + trip_status_id (number)
    + contract_number (string)
    + estimated_amount (number)

## FarePaymentEntry (object)
    + fare (integer)
    + cc_tip (float)
    + created_on (string)
    + payment_type (string)
    + cc_amount (float)
    + fare_origrate (number)
    + fare_amount (number)
    + cc_number (string)

## FareSourceEntry (object)
    + info (string)
    + vehicle_id (number)
    + driver_id (number)
    + created_on (string)
    
## CancelFareRequest (object)
+ fare_number: 9241 (string, required)
+ fare_type: immediate (enum[string], optional)
    - immediate
    - future
+ cancel_reason : testing (string, optional)
+ cancel_code: 12 (number, optional)


## UpdateFareRequest (object)
- fare_number: 9241 (string, required)
- action: keep no show (enum[string], required)
    - reject no show
    - accept no show
    - keep no show
    - cancel
- reason : 'waited too long' (string, required)    
- operator_id: 10001 (number, required)
- operator_name: samira (string)
- taxi: 8080 (number)
- fleet: 2 (number)
- cancel_code: 12 (number, optional)

   
## SuspendVehicle (object)
- status: 1 (number)
- vehicle_id: 8080 (number)

## SuspensionData (object)
- vehicle_id: 8080 (number)
- suspension_timestamp: 1484771831 (number)
- suspension_time_min: 1484771831 (number)
- authority_id: 999 (number)
- suspension_time: 10 (number)
- suspension_reasons: ['too fast', 'always late'] array[string]
- company_id: 1 (number)

## SuspendDriver (object)
- status: 1 (number)
- driver_id: 8080 (number)
- company_id: 1 (number)

## SuspensionDriverData (object)
    - driver_id (number)
    - suspension_timestamp (number)
    - suspension_time_min (number)
    - suspension_time (number)
    - company_id (number)

## StreetRangeEntry (object)
    - low (number)
    - lat (float)
    - lon (float)
    - locator (string)
    - number_type (string)
    - postal_code (string)
    - local_call (number)
    - no_service (number)
    - priority (number)
    - restricted (number)
    - fleet_number (number)
    - dispatch_zones (array[number])



## StreetRangeResponse (object)
    - status (string)
    - result
        - message (string)
        - num_entries (number)
        - ranges (array[StreetRange])

## ResultNoDataOK (object)
    - status (string)
    - result:
        - message (string)
        
        
## ResultNoData500 (object)
    - status (string)
    - result
        - message (string)